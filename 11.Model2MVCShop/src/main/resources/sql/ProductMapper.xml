<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 		column="prod_no" 			jdbcType="INTEGER"/>
		<result property="prodName"		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodStock"	column="prod_stock" 		jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 		column="price" 				jdbcType="NUMERIC" />
		<result property="fileName" 	column="image_file" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE" />
		<result property="prodTranCode"	column="tran_status_code"	jdbcType="CHAR"/>
	</resultMap>
	
	<insert id="addProduct" parameterType="product">
		INSERT INTO product(prod_no, prod_name, prod_stock, prod_detail
							, manufacture_day, price, image_file, reg_date)
		VALUES (seq_product_prod_no.nextval,#{prodName},NVL(#{prodStock:NUMERIC},5),#{prodDetail:VARCHAR}
				,#{manuDate:VARCHAR},#{price:NUMERIC},#{fileName:VARCHAR},SYSDATE)
	</insert>
	
	<select id="getProduct" parameterType="string"	resultMap="productSelectMap">
		SELECT prod_no, prod_name, prod_stock, prod_detail, manufacture_day
				, price, image_file, reg_date
		FROM product
		WHERE prod_no = #{prodNo}
	</select>
	
	<update id="updateProduct" parameterType="product">
		UPDATE product
		SET prod_name = #{prodName}, prod_detail = #{prodDetail:VARCHAR}
			, manufacture_day = #{manuDate:VARCHAR}
			, price = #{price:NUMERIC}, image_file = #{fileName:VARCHAR}
		WHERE prod_no = #{prodNo}
	</update>
	
	<select  id="getProductListAll" parameterType="map" resultMap="productSelectMap">
		SELECT DISTINCT p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day
			, p.price, p.image_file, p.reg_date, p.prod_stock
			,CASE MAX(t.tran_status_code)
						WHEN '0' THEN '구매완료'
						WHEN '1' THEN '배송중'
						WHEN '2' THEN '배송완료'
						ELSE '판매중' END AS tran_status_code
		FROM product p, transaction t
		WHERE p.prod_no = t.prod_no(+)
		GROUP BY p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day
						, p.price, p.image_file, p.reg_date, p.prod_stock
	</select>
	<select  id="getProductList" parameterType="map" resultMap="productSelectMap">
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
			FROM ( SELECT DISTINCT p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day
				, p.price, p.image_file, p.reg_date, p.prod_stock
				,CASE MAX(t.tran_status_code)
						WHEN '0' THEN '구매완료'
						WHEN '1' THEN '배송중'
						WHEN '2' THEN '배송완료'
						ELSE '판매중' END AS tran_status_code
				FROM product p, transaction t
				WHERE p.prod_no = t.prod_no(+)
				<if test="searchCondition != null">
					<choose>
						<when test="searchCondition == 0 and searchKeyword !=''">AND p.prod_no = #{searchKeyword}</when>
						<when test="searchCondition == 1 and searchKeyword !=''">AND p.prod_name LIKE '%'||#{searchKeyword}||'%'</when>
						<when test="searchCondition == 2 and searchKeyword !=''">AND p.price LIKE '%'||#{searchKeyword}||'%'</when>
					</choose>
				</if>
				
				<if test="searchValueLow != searchValueHigh">
					<if test="searchValueLow > searchValueHigh">AND p.price BETWEEN #{searchValueHigh} AND #{searchValueLow}</if>
					<if test="searchValueLow &lt; searchValueHigh">AND p.price BETWEEN #{searchValueLow} AND #{searchValueHigh}</if>
				</if>
				
				<if test="viewSoldItem">
					AND t.tran_status_code = '0'
				</if>
				GROUP BY p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day
						, p.price, p.image_file, p.reg_date, p.prod_stock
				ORDER BY 
				<if test="sortingTarget != null">
					<choose>
						<when test="sortingTarget =='price'">p.price</when>
						<when test="sortingTarget =='prodName'">p.prod_name</when>
					</choose>
				</if>
				<if test="sortingTarget == null || sortingTarget == ''">
					p.prod_no
				</if>
				<if test="!sortingDESC">DESC</if>
				) inner_table
			WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	<select  id="getTotalCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM( SELECT DISTINCT p.prod_no
				FROM product p, transaction t
				WHERE p.prod_no = t.prod_no(+)
				<if test="searchCondition != null">
					<choose>
						<when test="searchCondition == 0 and searchKeyword !=''">AND p.prod_no = #{searchKeyword}</when>
						<when test="searchCondition == 1 and searchKeyword !=''">AND p.prod_name LIKE '%'||#{searchKeyword}||'%'</when>
						<when test="searchCondition == 2 and searchKeyword !=''">AND p.price LIKE '%'||#{searchKeyword}||'%'</when>
					</choose>
				</if>
				
				<if test="searchValueLow != searchValueHigh">
					<if test="searchValueLow > searchValueHigh">AND p.price BETWEEN #{searchValueHigh} AND #{searchValueLow}</if>
					<if test="searchValueLow &lt; searchValueHigh">AND p.price BETWEEN #{searchValueLow} AND #{searchValueHigh}</if>
				</if>
				
				<if test="viewSoldItem">
					AND t.tran_status_code = '0'
				</if>
				
				ORDER BY 
				<if test="sortingTarget != null">
					<choose>
						<when test="sortingTarget =='price'">p.price</when>
						<when test="sortingTarget =='prodName'">p.prod_name</when>
					</choose>
				</if>
				<if test="sortingTarget == null || sortingTarget == ''">
					p.prod_no
				</if>
				<if test="!sortingDESC">DESC</if>
				) countTable
	</select>
</mapper>